{"version":3,"sources":["server.js"],"names":["_express","_interopRequireDefault","require","_nodeFetch","_path","app","PORT","use","express","req","res","sendFile","path","join","process","cwd","response","json","data","console","error","_context","t0","status","listen","log","concat"],"mappings":"aAAA,IAAAA,SAAAC,uBAAAC,QAAA,YACAC,WAAAF,uBAAAC,QAAA,eADAE,MAAAH,uBAAAC,QAAA,iFACA,IAAAG,KAAA,EAAAL,SAAA,WAIMM,KAAO,IAGbD,IAAIE,IAAIC,SAAAA,QAAAA,OAAe,WAHvBH,IAAMC,IAAI,IAAG,SAAAG,EAEbC,GAKEA,EAAIC,SAASC,MAAAA,QAAKC,KAAKC,QAAQC,MAAO,SAAU,iBAAhDL,IAAAA,IAAIC,aAASC,SAAAA,EAAKC,GAALD,IAAAA,EAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,OAMY,EAAAT,WAAA,SAAM,qEANlBS,KAAAA,EAAAA,OAMLI,EANKJ,EAAAA,KAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAIOI,EAAAC,QAJPL,KAAAA,EAIPM,EAJON,EAAAA,KAIOF,EAAAO,KAAAC,GAJPN,EAAAA,KAAAA,GAAAA,MAAAA,KAAAA,GAAAA,EAAAA,KAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAIOO,QAAAC,MAAA,sCAAAC,EAAAC,IAAAZ,EAAAa,OAAA,KAAAN,KAAA,CAAAG,MAAA,wCAJPR,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAAA,SAAAA,KAAAA,KAAAA,CAAAA,CAAAA,EAAAA,QAgBfP,IAAImB,OAAOlB,KAAM,WAZKa,QAAAM,IAAA,yCAAAC,OAAApB","file":"server.min.js","sourcesContent":["import express from 'express';\r\nimport fetch from 'node-fetch';\r\nimport path from 'path';\r\n\r\nconst app = express();\r\nconst PORT = 3000;\r\n\r\n// 클라이언트 파일 서빙 설정\r\napp.use(express.static('public'));\r\n\r\n// 기본 라우트로 HTML 파일 제공\r\napp.get('/', (req, res) => {\r\n  res.sendFile(path.join(process.cwd(), 'public', 'index.html'));\r\n});\r\n\r\n// Upbit API 프록시 라우트\r\napp.get('/api/upbit', async (req, res) => {\r\n  try {\r\n    const response = await fetch('https://api.upbit.com/v1/ticker?markets=KRW-BTC,KRW-ETH,KRW-DOGE');\r\n    const data = await response.json();\r\n    res.json(data);\r\n  } catch (error) {\r\n    console.error('Error fetching data from Upbit API:', error);\r\n    res.status(500).json({ error: 'Failed to fetch data from Upbit API' });\r\n  }\r\n});\r\n\r\n// 서버 실행\r\napp.listen(PORT, () => {\r\n  console.log(`Server is running on http://localhost:${PORT}`);\r\n});\r\n"]}